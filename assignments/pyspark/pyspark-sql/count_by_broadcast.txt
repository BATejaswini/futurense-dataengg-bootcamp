rdd1=sc.textFile('home/tech/trans.txt')
rdd1.collect()
['100,DEBIT,1000.0,IND', '101,CREDIT,2000.0,IND', '102,CREDIT,5000.0,JPN', '103,DEBIT,2300.0,JPN', '104,CREDIT,4090.0,AUS', '105,DEBIT,1090.0,AUS', '106,DEBIT,3000.0,IND']
rdd2=rdd1.flatMap(lambda x:x.split(','))
rdd2.collect()
[['100', 'DEBIT', '1000.0', 'IND'], ['101', 'CREDIT', '2000.0', 'IND'], ['102', 'CREDIT', '5000.0', 'JPN'], ['103', 'DEBIT', '2300.0', 'JPN'], ['104', 'CREDIT', '4090.0', 'AUS'], ['105', 'DEBIT', '1090.0', 'AUS'], ['106', 'DEBIT', '3000.0', 'IND']]

>>> countries = sc.broadcast({'IND':'India','JPN':'Japan','AUS':'Australia'})
>>> def state_convert(code):
... return countries.value[code]
...
>>> rdd3 = rdd2.map(lambda x:((state_convert(x[3]),x[1]),1))
>>> rdd3.collect()
[(('India', 'DEBIT'), 1), (('India', 'CREDIT'), 1), (('Japan', 'CREDIT'), 1), (('Japan', 'DEBIT'), 1), (('Australia', 'CREDIT'), 1), (('Australia', 'DEBIT'), 1), (('India', 'DEBIT'), 1)]
>>> rdd4 = rdd3.reduceByKey(lambda a,b:a+b)
>>> rdd4.collect()
[(('Japan', 'CREDIT'), 1), (('Japan', 'DEBIT'), 1), (('Australia', 'CREDIT'), 1), (('Australia', 'DEBIT'), 1), (('India', 'DEBIT'), 2), (('India', 'CREDIT'), 1)]
